<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.doctor_fish_back.repository.admin.AdminReservationMapper">

    <resultMap id="adminReservationResultMap" type="com.project.doctor_fish_back.entity.Reservation">
        <id property="id" column="rt_id" />
        <result property="userId" column="rt_user_id" />
        <result property="status" column="status" />
        <result property="reservationDate" column="reservation_date" />
        <result property="registerDate" column="register_date" />
        <association property="user" resultMap="userResultMap" />
    </resultMap>

    <resultMap id="reservationResultMap" type="com.project.doctor_fish_back.entity.Reservation">
        <id property="id" column="rt_id" />
        <result property="userId" column="rt_user_id" />
        <result property="doctorId" column="doctor_id" />
        <result property="status" column="status" />
        <result property="reservationDate" column="reservation_date" />
        <result property="registerDate" column="register_date" />
        <association property="doctor" resultMap="doctorResultMap" />
    </resultMap>

    <resultMap id="doctorResultMap" type="com.project.doctor_fish_back.entity.Doctor">
        <id property="id" column="dot_id" />
        <result property="userId" column="dot_user_id" />
        <result property="departId" column="depart_id" />
        <result property="comment" column="comment" />
        <result property="record" column="record" />
        <association property="user" resultMap="userResultMap"/>
        <association property="depart" resultMap="departResultMap"/>
    </resultMap>

    <resultMap id="userResultMap" type="com.project.doctor_fish_back.entity.User">
        <id property="id" column="ut_id" />
        <result property="email" column="email" />
        <result property="name" column="ut_name" />
        <result property="password" column="password" />
        <result property="phoneNumber" column="phone_number" />
        <result property="img" column="ut_img" />
        <result property="emailValid" column="email_valid" />
        <result property="registerDate" column="ut_register_date" />
        <result property="updateDate" column="ut_update_date" />
    </resultMap>

    <resultMap id="departResultMap" type="com.project.doctor_fish_back.entity.Depart">
        <id property="id" column="det_id" />
        <result property="name" column="det_name" />
    </resultMap>

    <resultMap id="getReservationMonthResultMap" type="com.project.doctor_fish_back.entity.GetReservationMonthDoctors">
        <result property="id" column="id" />
        <result property="name" column="name" />
    </resultMap>

    <update id="acceptById">
        update reservation_tb
        set
            status = 2
        where
            id = #{id}
    </update>

    <update id="cancelById">
        update reservation_tb
        set
            status = 3
        where
            id = #{id}
    </update>

    <delete id="deleteById">
        delete
        from
            reservation_tb
        where
            id = #{id}
    </delete>

    <select id="findById" resultMap="reservationResultMap">
        select
            rt.id as rt_id,
            rt.user_id as rt_user_id,
            rt.doctor_id,
            rt.status,
            rt.reservation_date,
            rt.register_date,
            dot.id as dot_id,
            dot.user_id as dot_user_id,
            dot.depart_id,
            dot.comment,
            dot.record,
            ut.id as ut_id,
            ut.email,
            ut.name as ut_name,
            ut.password,
            ut.phone_number,
            ut.img as ut_img,
            ut.email_valid,
            ut.register_date as ut_register_date,
            ut.update_date as ut_update_date,
            det.id as det_id,
            det.name as det_name
        from
            reservation_tb rt
            left outer join doctor_tb dot on(rt.doctor_id = dot.id)
            left outer join user_tb ut on(dot.user_id = ut.id)
            left outer join depart_tb det on(dot.depart_id = det.id)
        where
            rt.id = #{id}
    </select>

    <select id="getAll" resultMap="adminReservationResultMap">
        select
            rt.id as rt_id,
            rt.user_id as rt_user_id,
            rt.status,
            rt.reservation_date,
            rt.register_date,
            ut.id as ut_id,
            ut.email,
            ut.name as ut_name,
            ut.password,
            ut.phone_number,
            ut.img as ut_img,
            ut.email_valid,
            ut.register_date as ut_register_date,
            ut.update_date as ut_update_date
        from
            reservation_tb rt
            left outer join user_tb ut on(rt.user_id = ut.id)
        order by
            rt.reservation_date desc
        limit #{startIndex}, #{limit}
    </select>

    <select id="getToday" resultMap="adminReservationResultMap">
        select
            rt.id as rt_id,
            rt.user_id as rt_user_id,
            rt.status,
            rt.reservation_date,
            rt.register_date,
            ut.id as ut_id,
            ut.email,
            ut.name as ut_name,
            ut.password,
            ut.phone_number,
            ut.img as ut_img,
            ut.email_valid,
            ut.register_date as ut_register_date,
            ut.update_date as ut_update_date
        from
            reservation_tb rt
            left outer join user_tb ut on(rt.user_id = ut.id)
        where
            DATE(reservation_date) = DATE(NOW())
        order by
            rt.reservation_date desc
        limit #{startIndex}, #{limit}
    </select>

    <select id="getCountAll" resultType="java.lang.Long">
        select
            count(*)
        from
            reservation_tb
    </select>

    <select id="getCountToday" resultType="java.lang.Long">
        select
            count(*)
        from
            reservation_tb
        where
            DATE(reservation_date) = DATE(NOW())
    </select>

    <select id="getAllToInfo" resultMap="reservationResultMap">
        select
            rt.id as rt_id,
            rt.user_id as rt_user_id,
            rt.doctor_id,
            rt.status,
            rt.reservation_date,
            rt.register_date,
            dot.id as dot_id,
            dot.user_id as dot_user_id,
            dot.depart_id,
            dot.comment,
            dot.record,
            ut.id as ut_id,
            ut.email,
            ut.name as ut_name,
            ut.password,
            ut.phone_number,
            ut.img as ut_img,
            ut.email_valid,
            ut.register_date as ut_register_date,
            ut.update_date as ut_update_date,
            det.id as det_id,
            det.name as det_name
        from
            reservation_tb rt
            left outer join doctor_tb dot on(rt.doctor_id = dot.id)
            left outer join user_tb ut on(dot.user_id = ut.id)
            left outer join depart_tb det on(dot.depart_id = det.id)
        order by
            rt.reservation_date desc
    </select>

    <select id="getCountAllToInfo" resultType="java.lang.Long">
        select
            count(*)
        from
            reservation_tb
    </select>

    <select id="getAllToDoctor" resultMap="reservationResultMap">
        select
            rt.id as rt_id,
            rt.user_id as rt_user_id,
            rt.doctor_id,
            rt.status,
            rt.reservation_date,
            rt.register_date,
            dot.id as dot_id,
            dot.user_id as dot_user_id,
            dot.depart_id,
            dot.comment,
            dot.record,
            ut.id as ut_id,
            ut.email,
            ut.name as ut_name,
            ut.password,
            ut.phone_number,
            ut.img as ut_img,
            ut.email_valid,
            ut.register_date as ut_register_date,
            ut.update_date as ut_update_date,
            det.id as det_id,
            det.name as det_name
        from
            reservation_tb rt
            left outer join doctor_tb dot on(rt.doctor_id = dot.id)
            left outer join user_tb ut on(dot.user_id = ut.id)
            left outer join depart_tb det on(dot.depart_id = det.id)
        where
            doctor_id = #{doctorId}
        order by
            rt.reservation_date desc
    </select>

    <select id="getCountAllToDoctor" resultType="java.lang.Long">
        select
            count(*)
        from
            reservation_tb
        where
            doctor_id = #{doctorId}
    </select>

    <select id="getDoctors" resultMap="getReservationMonthResultMap">
        select
            rt.doctor_id as id,
            ut.name as name
        from
            reservation_tb rt
            left join doctor_tb dt on(rt.doctor_id = dt.id)
            left join user_tb ut on(dt.user_id = ut.id)
        where
            rt.reservation_date like concat(#{year}, "%")
        group by
            rt.doctor_id;
    </select>

    <select id="getCounts" resultType="java.lang.Integer">
        select
            ifnull(temp_tb.count, 0)
        from
            month_tb mt
            left outer join
                (select
                    substr(reservation_date, 6, 2) as id,
                    count(*) as count
                from
                    reservation_tb
                where
                    doctor_id = #{doctorId}
                group by
                    substr(reservation_date, 6, 2)) as temp_tb on(mt.id = temp_tb.id)
        order by
            mt.id;
    </select>

    <select id="getAllByLimit" resultMap="adminReservationResultMap">
        select
            rt.id as rt_id,
            rt.user_id as rt_user_id,
            rt.status,
            rt.reservation_date,
            rt.register_date,
            ut.id as ut_id,
            ut.email,
            ut.name as ut_name,
            ut.password,
            ut.phone_number,
            ut.img as ut_img,
            ut.email_valid,
            ut.register_date as ut_register_date,
            ut.update_date as ut_update_date
        from
            reservation_tb rt
            left outer join user_tb ut on(rt.user_id = ut.id)
        order by
            rt.reservation_date desc
        limit 0, #{limit}
    </select>

    <select id="getTodayByLimit" resultMap="adminReservationResultMap">
        select
            rt.id as rt_id,
            rt.user_id as rt_user_id,
            rt.status,
            rt.reservation_date,
            rt.register_date,
            ut.id as ut_id,
            ut.email,
            ut.name as ut_name,
            ut.password,
            ut.phone_number,
            ut.img as ut_img,
            ut.email_valid,
            ut.register_date as ut_register_date,
            ut.update_date as ut_update_date
        from
            reservation_tb rt
            left outer join user_tb ut on(rt.user_id = ut.id)
        where
            DATE(reservation_date) = DATE(NOW())
        order by
            rt.reservation_date desc
        limit 0, #{limit}
    </select>

    <select id="getBySearch" resultMap="adminReservationResultMap">
        select
            rt.id as rt_id,
            rt.user_id as rt_user_id,
            rt.status,
            rt.reservation_date,
            rt.register_date,
            ut.id as ut_id,
            ut.email,
            ut.name as ut_name,
            ut.password,
            ut.phone_number,
            ut.img as ut_img,
            ut.email_valid,
            ut.register_date as ut_register_date,
            ut.update_date as ut_update_date
        from
            reservation_tb rt
            left outer join user_tb ut on(rt.user_id = ut.id)
        where
            ut.email like concat("%", #{searchText}, "%")
            or ut.name like concat("%", #{searchText}, "%")
        order by
            rt.reservation_date desc
    </select>

    <select id="getCountBySearch" resultType="java.lang.Long">
        select
            count(*)
        from
            reservation_tb rt
            left outer join user_tb ut on(rt.user_id = ut.id)
        where
            ut.email like concat("%", #{searchText}, "%")
            or ut.name like concat("%", #{searchText}, "%")
    </select>

</mapper>