<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.doctor_fish_back.repository.admin.AdminReviewMapper">

    <select id="getReviewAll" resultType="com.project.doctor_fish_back.entity.Review">
        select
            rt.id,
            rt.user_id as userId,
            rt.img,
            rt.content,
            rt.register_date as registerDate,
            rt.update_date as updateDate,
            ut.name as userName,
            ut.img as userImg
        from
            review_tb rt
            left outer join user_tb ut on(rt.user_id = ut.id)
        order by
            rt.register_date desc
    </select>

    <select id="getReviewAllByLimit" resultType="com.project.doctor_fish_back.entity.Review">
        select
            rt.id,
            rt.user_id as userId,
            rt.img,
            rt.content,
            rt.register_date as registerDate,
            rt.update_date as updateDate,
            ut.name as userName,
            ut.img as userImg
        from
            review_tb rt
            left outer join user_tb ut on(rt.user_id = ut.id)
        where
            ut.name like concat("%", #{searchText}, "%")
        order by
            rt.register_date desc
        limit #{startIndex}, #{limit}
    </select>

    <select id="getReviewCountByUserId" resultType="java.lang.Long">
        select
            count(*)
        from
            review_tb
        where
            user_id = #{userId}
    </select>

    <select id="getCountReviews" resultType="java.lang.Long">
        select
            count(*)
        from
            review_tb rt
            left outer join user_tb ut on(rt.user_id = ut.id)
        where
            ut.name like concat("%", #{searchText}, "%")
    </select>

    <select id="findById" resultType="com.project.doctor_fish_back.entity.Review">
        select
            rt.id,
            rt.user_id as userId,
            rt.img,
            rt.content,
            rt.register_date as registerDate,
            rt.update_date as updateDate,
            ut.name as userName,
            ut.img as userImg
        from
            review_tb rt
            left outer join user_tb ut on(rt.user_id = ut.id)
        where
            rt.id = #{id}
    </select>

</mapper>